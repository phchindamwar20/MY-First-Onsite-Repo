<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>58.0</apiVersion>
    <decisions>
        <description>Platform Event is for an Account Record to update</description>
        <name>What_is_the_Object_Type</name>
        <label>What is the Object Type?</label>
        <locationX>182</locationX>
        <locationY>170</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Account</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Object_API_Name__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Account</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Account_Trigger_AfterSync</targetReference>
            </connector>
            <label>Account</label>
        </rules>
    </decisions>
    <description>When DLRS updates a field as a result of a chain of prior updates across objects (i.e. Account updates Contract, Contract updates Account, DLRS updates Account), there are multiple executions of the trigger. AfterSync only executes on the first execution of a trigger to prevent Salesforce throwing an error related to queueing multiple queueable processes in a given transaction. To prevent this, we&apos;ll raise a platform event when key fields updated in subsequent execution of triggers. A platform event flow will update the record to spin a separate new trigger execution transaction that will trigger the AfterSync.</description>
    <environments>Default</environments>
    <formulas>
        <name>forT_TriggerAfterSync</name>
        <dataType>String</dataType>
        <expression>{!$User.FirstName} &amp; &apos; &apos; &amp; {!$User.LastName} &amp; &apos;-&apos; &amp; TEXT({!$System.OriginDateTime})</expression>
    </formulas>
    <interviewLabel>AfterSync Trigger Event-Trigger: Update Records {!$Flow.CurrentDateTime}</interviewLabel>
    <label>AfterSync Trigger Event-Trigger: Update Records</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordUpdates>
        <name>Update_Account_Trigger_AfterSync</name>
        <label>Update Account Trigger AfterSync</label>
        <locationX>50</locationX>
        <locationY>278</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Record_Id__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Trigger_AfterSync__c</field>
            <value>
                <elementReference>forT_TriggerAfterSync</elementReference>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>What_is_the_Object_Type</targetReference>
        </connector>
        <object>AfterSync_Trigger__e</object>
        <triggerType>PlatformEvent</triggerType>
    </start>
    <status>Active</status>
</Flow>
